name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
  
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Cache cargo registry
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: cargo-build-cache

    - name: Run tests
      run: cargo test

    # - name: Release lambda
    #   run: |
    #     pip install cargo-lambda
    #     cargo lambda build --release
    #     cargo lambda deploy slack-service
    #   env:
    #     AWS_REGION: ${{ secrets.AWS_REGION }}
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # - name: Upload build artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: build 
    #     path: target/lambda/slack-service